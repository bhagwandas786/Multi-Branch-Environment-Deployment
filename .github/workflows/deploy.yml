name: CI/CD Deployment Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-output
        path: |
          test-results/
          coverage/

  qa-deploy:
    name: Deploy to QA
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    environment: qa
    
    steps:
    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        name: test-output
        
    - name: Deploy to QA
      run: |
        echo "Deploying to QA environment..."
        echo "Build successful: ${{ needs.ci.result }}"

  production-deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        name: test-output
        
    - name: Production deployment
      run: |
        echo "ðŸš€ DEPLOYING TO PRODUCTION"
        echo "All tests passed successfully"
        
    - name: Send Slack Notification
      if: success()
      uses: slackapi/slack-github-action@v1
      with:
        slack-message: |
          *Production Deployment Successful!*
          Repo: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          By: ${{ github.actor }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
